services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - '6379:6379'

  todo:
    image: todo-api:latest
    container_name: todo
    restart: always
    ports:
      - '8080:8080'
    environment:
      APP_ENV: DEV
      REDIS_CACHE_ENTITY_EXPIRATION_HOURS: 1

      SQL_SERVER: postgres
      SQL_USER: postgres
      SQL_PASSWORD: postgres
      SQL_DATABASE: todo

      X_API_HEADER: 9f3c5a8d3b6e4f1ab2d3e7c9a1f0b3d4c5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0

      REDIS_SERVER: redis
      REDIS_USER: dotnet-sign
      REDIS_PASSWORD: xxx
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  todo-web:
    image: todo-web:latest
    container_name: todo-web
    restart: always
    ports:
      - '8081:8081'
    environment:
      NODE_ENV: production
    depends_on:
      - postgres
      - redis

volumes:
  postgres_data:
